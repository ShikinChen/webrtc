import com.sdk.versionplugin.BuildConfig

apply plugin: 'com.android.library'

android {
    compileSdkVersion BuildConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode 1
        versionName '1.0.0'

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_shared',
                        "-DWEBRTC_REPO=${webrtc_src}",
                        "-DWEBRTC_BUILD_DIR=${webrtc_out}",
//                        "-DCMAKE_OSX_SYSROOT=${cmake_osx_sysroot}",
                        "-DCMAKE_OSX_DEPLOYMENT_TARGET=${cmake_osx_deployment_target}"
                cppFlags '-std=c++14'
                abiFilters "${webrtc_abi}" //, 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                //targets "protobuf_lite", "absl_base", "absl_optional", "absl_variant", "yuv", "ssl", "crypto", "event", "json", "srtp", "vpx", "opus", "rnnoise", "usrsctp"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    packagingOptions {
        doNotStrip "*/arm64-v8a/*.so"
        doNotStrip "*/x86_64/*.so"
    }

    externalNativeBuild {
        cmake {
            version "3.18.1"
            path 'CMakeLists.txt'
        }
    }

    ndkVersion "$ndk_version"
}

dependencies {
}
